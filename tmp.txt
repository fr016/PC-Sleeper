function Measure-ADReplicationTime {
    <#
    .SYNOPSIS
    Measures the replication time of an Active Directory object from the Primary Domain Controller (PDC) to a specified Domain Controller (DC).

    .DESCRIPTION
    This function identifies the PDC of the specified domain, creates a temporary, disabled user object on the PDC, and measures the time taken for this object to replicate to a specified DC. After measurement, the temporary user object is removed.

    .PARAMETER DomainFQDN
    Fully Qualified Domain Name (FQDN) of the target domain. For example: "example.com".

    .PARAMETER TargetDC
    The hostname of the Domain Controller to which replication time will be measured.

    .EXAMPLE
    Measure-ADReplicationTime -DomainFQDN "example.com" -TargetDC "DC2.example.com"
    #>
    param (
        [Parameter(Mandatory = $true)]
        [string]$DomainFQDN,

        [Parameter(Mandatory = $true)]
        [string]$TargetDC
    )

    begin {
        try {
            # Import the Active Directory module
            Import-Module ActiveDirectory -ErrorAction Stop

            # Retrieve the PDC of the target domain
            $PDC = (Get-ADDomain -Server $DomainFQDN).PDCEmulator
            Write-Host "PDC detected: $PDC"

            # Retrieve the default Users container of the target domain
            $UsersContainer = (Get-ADDomain -Server $PDC).UsersContainer

            # Generate a unique name for the temporary user
            $guid = [guid]::NewGuid().ToString("N").Substring(0, 8)
            $tempUser = "ADCTest_$guid"
            $samAccountName = $tempUser.Substring(0, [Math]::Min(20, $tempUser.Length))

            # Create the disabled user on the PDC
            New-ADUser -Name $tempUser -SamAccountName $samAccountName -Path $UsersContainer -Enabled $false -Server $PDC
            Write-Host "Temporary user '$tempUser' created and disabled on $PDC at $(Get-Date)"
        } catch {
            Write-Error "Initialization error: $_"
            return
        }
    }

    process {
        try {
            $startTime = Get-Date
            do {
                Start-Sleep -Seconds 10
                $user = Get-ADUser -Identity $samAccountName -Server $TargetDC -ErrorAction SilentlyContinue
            } while (-not $user)
            $endTime = Get-Date
            $replicationTime = $endTime - $startTime
            Write-Host "Replicated on $TargetDC in $($replicationTime.TotalSeconds) seconds"
        } catch {
            Write-Error "Error checking replication on $TargetDC: $_"
        }
    }

    end {
        try {
            # Remove the temporary user without confirmation
            Remove-ADUser -Identity $samAccountName -Server $PDC -Confirm:$false
            Write-Host "Temporary user '$tempUser' removed from $PDC at $(Get-Date)"
        } catch {
            Write-Error "Error removing temporary user: $_"
        }
    }
}

# Example usage
Measure-ADReplicationTime -DomainFQDN "example.com" -TargetDC "DC2.example.com"
