
function Générer-Rapport {
  <#
  .SYNOPSIS
      Génère un rapport de messages à partir d'une collection de PS CustomObject.

  .DESCRIPTION
      Cette fonction prend en paramètre une collection de PS CustomObject et génère un rapport de messages en HTML.

  .PARAMETER Messages
      La collection de PS CustomObject à utiliser pour générer le rapport.

  .EXAMPLE
      Générer-Rapport -Messages @(
        [PSCustomObject]@{
          Date       = '2024-09-04 16:18:09'
          Message    = 'Script executed on WNPARPTSK7301'
          Level      = 'INFO'
        },
        [PSCustomObject]@{
          Date       = '2024-09-04 16:18:15'
          Message    = 'Connected to domain caza'
          Level      = 'INFO'
        }
      )

  .INPUTS
      System.Management.Automation.PSCustomObject[]

  .OUTPUTS
      System.String

  .NOTES
      Cette fonction utilise la syntaxe HTML pour générer le rapport.
  #>
  param (
    [Parameter(Mandatory=$true)]
    [PSCustomObject[]]$Messages
  )

  # Crée un tableau HTML pour les messages
  $html = @"
  <html>
    <head>
      <title>Rapport de messages</title>
    </head>
    <body>
      <h1>Rapport de messages</h1>
      <table border="1">
        <tr>
          <th>Date</th>
          <th>Message</th>
          <th>Niveau</th>
        </tr>
"@


  # Ajoute les messages à la table HTML
  foreach ($message in $Messages) {
    if ($message.Level -eq 'ERROR') {
      $levelColor = 'red'
    } else {
      $levelColor = 'black'
    }
    $html += @"
    <tr>
      <td>$($message.Date)</td>
      <td>$($message.Message)</td>
      <td style="color:$levelColor">$($message.Level)</td>
    </tr>
"@


  }

  # Termine la table HTML
  $html += @"
      </table>
    </body>
  </html>
"@


  # Affiche le code HTML
  Write-Host $html
}
