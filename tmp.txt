function Test-ADReplicationConvergence {
    <#
    .SYNOPSIS
    Measures the replication latency of an Active Directory object from the PDC to all domain controllers.

    .DESCRIPTION
    This function creates a temporary, disabled user object with a randomly generated name indicating it's for an AD convergence test in a specified Organizational Unit (OU) or, by default, in the "Users" container of the target domain. It measures the time taken for each domain controller to replicate this object and then deletes the user without confirmation.

    .PARAMETER DomainFQDN
    Fully Qualified Domain Name (FQDN) of the target domain. For example: "example.com".

    .PARAMETER OU
    Distinguished Name (DN) of the Organizational Unit where the temporary object will be created. For example: "OU=Test,DC=example,DC=com". If not specified, the default "Users" container of the target domain will be used.

    .EXAMPLE
    Test-ADReplicationConvergence -DomainFQDN "example.com" -OU "OU=Test,DC=example,DC=com"
    #>
    param (
        [Parameter(Mandatory = $true)]
        [string]$DomainFQDN,

        [Parameter(Mandatory = $false)]
        [string]$OU
    )

    begin {
        try {
            # Import the Active Directory module
            Import-Module ActiveDirectory -ErrorAction Stop

            # Retrieve the PDC of the target domain
            $PDC = (Get-ADDomain -Server $DomainFQDN).PDCEmulator
            Write-Host "Detected PDC: $PDC"

            # If OU is not specified, use the default "Users" container of the target domain
            if (-not $OU) {
                $OU = (Get-ADDomain -Server $PDC).UsersContainer
            }

            # Retrieve the list of all domain controllers in the target domain
            $DCs = Get-ADDomainController -Filter * -Server $PDC | Select-Object -ExpandProperty HostName

            # Generate a unique name for the temporary user
            $guid = [guid]::NewGuid().ToString("N").Substring(0, 8)
            $tempUser = "ADCTest_$guid"
            $samAccountName = $tempUser.Substring(0, [Math]::Min(20, $tempUser.Length))

            # Create the disabled user on the PDC
            New-ADUser -Name $tempUser -SamAccountName $samAccountName -Path $OU -Enabled $false -Server $PDC
            Write-Host "Temporary user '$tempUser' created and disabled on $PDC at $(Get-Date)"
        } catch {
            Write-Error "Initialization error: $_"
            return
        }
    }

    process {
        foreach ($DC in $DCs) {
            try {
                $startTime = Get-Date
                do {
                    Start-Sleep -Seconds 10
                    $user = Get-ADUser -Identity $samAccountName -Server $DC -ErrorAction SilentlyContinue
                } while (-not $user)
                $endTime = Get-Date
                $replicationTime = $endTime - $startTime
                Write-Host "Replicated on $DC in $($replicationTime.TotalSeconds) seconds"
            } catch {
                Write-Error "Error checking replication on $DC : $_"
            }
        }
    }

    end {
        try {
            # Remove the temporary user without confirmation
            Remove-ADUser -Identity $samAccountName -Server $PDC -Confirm:$false
            Write-Host "Temporary user '$tempUser' removed from $PDC at $(Get-Date)"
        } catch {
            Write-Error "Error removing temporary user: $_"
        }
    }
}

# Example usage with the target domain's FQDN and default OU
Test-ADReplicationConvergence -DomainFQDN "example.com"

# Example usage with the target domain's FQDN and a specific OU
Test-ADReplicationConvergence -DomainFQDN "example.com" -OU "OU=Test,DC=example,DC=com"
